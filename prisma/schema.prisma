
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user{
id Int @id @default(autoincrement())
firstName String
middleName String
lastName String
mobile String
email String @unique
passwordHash String
registeredAt DateTime
lastLogin DateTime
intro String @db.TinyText
profile String @db.Text
post post[]

}

model post{
id Int @id @default(autoincrement())
authorId Int 
parentId Int
title String 
metaTitle String 
slug String
summary String @db.TinyText
published Int @db.TinyInt
createdAt   DateTime @db.DateTime
updatedAt DateTime @db.DateTime
publishedAt DateTime @db.DateTime
content String @db.Text
post_comment post_comment[]
post_category post_category[]
post_meta post_meta[]
post_tag post_tag[]
user user @relation(fields: [authorId], references: [id], onDelete:Restrict, onUpdate:Cascade)
}

model post_comment{
id Int @id @default(autoincrement())
postId Int 
title String 
published Int @db.TinyInt
createdAt   DateTime @db.DateTime
updatedAt DateTime @db.DateTime
publishedAt DateTime @db.DateTime
content String @db.Text
post post @relation(fields: [postId], references: [id], onDelete:Restrict, onUpdate:Cascade)
}


model post_category{
categoryId Int @id @default(autoincrement())
postId Int 
post post @relation(fields: [postId], references: [id], onDelete:Restrict, onUpdate:Cascade)
 category category @relation(fields: [categoryId], references: [id])
}

model category{
id Int @id @default(autoincrement())
parentId Int?
title String 
metaTitle String 
slug String
content String @db.Text
 post_category post_category[]
}



model post_meta{
id Int @id @default(autoincrement())
postId Int 
key String 
content String @db.Text
post post @relation(fields: [postId], references: [id], onDelete:Restrict, onUpdate:Cascade)
}


model post_tag{
tagId Int @id @default(autoincrement())
postId Int 
post post @relation(fields: [postId], references: [id], onDelete:Restrict, onUpdate:Cascade)
tag tag @relation(fields: [tagId], references: [id])
}

model tag{
id Int @id @default(autoincrement())
title String 
metaTitle String 
slug String
content String @db.Text
post_tag post_tag[]
}




 